{
 "type": "prediction_task",
 "estimator": "Pipeline(steps=[('preprocessor',\n                 ColumnTransformer(transformers=[('numerical_transformer',\n                                                  Pipeline(steps=[('imputer',\n                                                                   SimpleImputer(strategy='median')),\n                                                                  ('scaler',\n                                                                   StandardScaler())]),\n                                                  ['Age', 'SibSp', 'Parch',\n                                                   'Fare', 'Age + Fare',\n                                                   'Age + Parch', 'Age + SibSp',\n                                                   'Fare + Parch',\n                                                   'Fare + SibSp',\n                                                   'Parch + SibSp',\n                                                   'Age * Fare', 'Age * Parch',\n                                                   'Age * SibSp',\n                                                   'Fare * Parch',\n                                                   'Fare * SibSp',\n                                                   'Parch * SibSp']),\n                                                 ('categorical_transformer',\n                                                  Pipeline(steps=[('imputer',\n                                                                   SimpleImputer(strategy='most_frequent')),\n                                                                  ('encoder',\n                                                                   OneHotEncoder(handle_unknown='ignore'))]),\n                                                  ['Pclass', 'Sex',\n                                                   'Embarked'])])),\n                ('selector',\n                 ColumnSelector(cols=[2, 6, 10, 11, 13, 15, 16, 18, 19, 20])),\n                ('classifier',\n                 LogisticRegression(penalty='l1', random_state=42,\n                                    solver='liblinear'))])",
 "data_set": "   PassengerId Pclass     Sex   Age  ...  Age * SibSp  Fare * Parch  Fare * SibSp Parch * SibSp\n0          530      2    male  23.0  ...         46.0          11.5          23.0             2\n1          760      1  female  33.0  ...          0.0           0.0           0.0             0\n2          532      3    male   NaN  ...          NaN           0.0           0.0             0\n3          227      2    male  19.0  ...          0.0           0.0           0.0             0\n4          884      2    male  28.0  ...          0.0           0.0           0.0             0\n5          637      3    male  32.0  ...          0.0           0.0           0.0             0\n6          718      2  female  27.0  ...          0.0           0.0           0.0             0\n7          278      2    male   NaN  ...          NaN           0.0           0.0             0\n\n[8 rows x 20 columns]",
 "field_delimiter": ",",
 "feature_columns": "all",
 "id_column": "PassengerId",
 "prediction_column": "Survived",
 "threshold": 0.43
}