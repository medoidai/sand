{
 "type": "evaluation_cross_validation_task",
 "fscore_beta": 1,
 "export_also_for_train_folds": true,
 "export_false_negatives_reports": true,
 "export_false_positives_reports": true,
 "export_pr_curves": true,
 "export_roc_curves": true,
 "export_confusion_matrixes": true,
 "export_classification_reports": true,
 "threshold_tuning_range": [
  0.01,
  1.0,
  0.01
 ],
 "metric_greater_is_better": true,
 "threshold_selection_by": "f1",
 "random_seed": 42,
 "label_column": "Survived",
 "id_column": "PassengerId",
 "feature_columns": "all",
 "field_delimiter": ",",
 "estimator_params": {
  "preprocessor__numerical_transformer__imputer__strategy": "mean",
  "classifier__penalty": "l1",
  "classifier__C": 10.0
 },
 "test_data_set": "data/titanic-test.csv",
 "train_data_set": "data/titanic-train.csv",
 "estimator": "Pipeline(steps=[('preprocessor',\n                 ColumnTransformer(transformers=[('numerical_transformer',\n                                                  Pipeline(steps=[('imputer',\n                                                                   SimpleImputer()),\n                                                                  ('scaler',\n                                                                   StandardScaler())]),\n                                                  ['Age', 'Fare', 'SibSp',\n                                                   'Parch']),\n                                                 ('categorical_transformer',\n                                                  Pipeline(steps=[('imputer',\n                                                                   SimpleImputer(strategy='most_frequent')),\n                                                                  ('encoder',\n                                                                   OneHotEncoder(handle_unknown='ignore'))]),\n                                                  ['Embarked', 'Sex',\n                                                   'Pclass'])])),\n                ('selector', ColumnSelector(cols=[0, 6, 7, 8, 9, 11])),\n                ('classifier',\n                 LogisticRegression(random_state=42, solver='liblinear'))])",
 "fold_options": {
  "shuffle": true,
  "total_folds": 5
 },
 "fold_method": "stratified"
}